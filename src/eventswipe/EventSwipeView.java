/*
 * EventSwipeView.java
 */
package eventswipe;

import eventswipe.EventSwipeData.BookingList;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.JPanel;
import org.jdesktop.application.Action;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.Timer;
import org.jdesktop.application.Application;
import org.jdesktop.application.ResourceMap;

/**
 * The application's main frame.
 */
public class EventSwipeView extends FrameView {

    public EventSwipeView(SingleFrameApplication app) {
        super(app);
        ResourceMap resourceMap = Application.getInstance(eventswipe.EventSwipeApp.class)
                                  .getContext().getResourceMap(EventSwipeView.class);
        titleInputDefault = resourceMap.getString("eventTitleInputDefault");
        fileInputDefault = resourceMap.getString("fileInputDefault");
        idInputDefault = resourceMap.getString("idInputDefault");
        initComponents();
        updateBookingPanel(false);
        try {
            Image i = ImageIO.read(getClass().getResource("/eventswipe/resources/logo.jpeg"));
            this.getFrame().setIconImage(i);
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }
        this.getFrame().setPreferredSize(new Dimension(750, 410));
        this.getFrame().setResizable(false);
        
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = EventSwipeApp.getApplication().getMainFrame();
            aboutBox = new EventSwipeAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        EventSwipeApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        clearButton1 = new javax.swing.JButton();
        studentNumberInput = new javax.swing.JFormattedTextField();
        enterStudentNumberButton = new javax.swing.JButton();
        bookingStatusScrollPane = new javax.swing.JScrollPane();
        bookingStatusTextArea = new javax.swing.JTextArea();
        backButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        studentNumberInputLabel = new javax.swing.JLabel();
        statusDisplayTextField = new javax.swing.JFormattedTextField();
        entrySlotDisplayTextField = new javax.swing.JFormattedTextField();
        attendeeCountDisplayTextField = new javax.swing.JFormattedTextField();
        attendeeCountLabel = new javax.swing.JLabel();
        entrySlotLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        checkingModeToggle = new javax.swing.JToggleButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        toggleMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        configPanel = new javax.swing.JPanel();
        eventTitleInputLabel = new javax.swing.JLabel();
        yesBookingRadioButton = new javax.swing.JRadioButton();
        noBookingRadioButton = new javax.swing.JRadioButton();
        requireBookingLabel = new javax.swing.JLabel();
        okConfigButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        bookingDetailsPanel = new javax.swing.JPanel();
        entrySlotBookingListLabel1 = new javax.swing.JLabel();
        entrySlotsLabel = new javax.swing.JLabel();
        bookingListBrowseButton1 = new javax.swing.JButton();
        entrySlotsSpinner = new javax.swing.JSpinner(new javax.swing.SpinnerNumberModel(1, 1, EventSwipeData.MAX_ENTRY_SLOTS, 1));
        entrySlotBookingListFilePathInput3 = new javax.swing.JFormattedTextField();
        entrySlotBookingListFilePathInput2 = new javax.swing.JFormattedTextField();
        entrySlotBookingListLabel3 = new javax.swing.JLabel();
        entrySlotBookingListLabel2 = new javax.swing.JLabel();
        waitingListFilePathInput = new javax.swing.JFormattedTextField();
        waitingListFileLabel = new javax.swing.JLabel();
        bookingListBrowseButton2 = new javax.swing.JButton();
        bookingListBrowseButton3 = new javax.swing.JButton();
        waitingListBrowseButton = new javax.swing.JButton();
        noWaitingListRadioButton = new javax.swing.JRadioButton();
        waitingListLabel = new javax.swing.JLabel();
        entrySlotBookingListFilePathInput1 = new javax.swing.JFormattedTextField();
        yesWaitingListRadioButton = new javax.swing.JRadioButton();
        eventTitleInput = new javax.swing.JFormattedTextField();
        clearButton = new javax.swing.JButton();
        requireBookingButtonGroup = new javax.swing.ButtonGroup();
        waitingListButtonGroup = new javax.swing.ButtonGroup();
        preConfigPanel = new javax.swing.JPanel();
        mainTitle = new javax.swing.JLabel();
        versionLabel = new javax.swing.JLabel();
        smallLogoLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        configPanel1 = new javax.swing.JPanel();
        okConfigButton1 = new javax.swing.JButton();
        titleLabel1 = new javax.swing.JLabel();
        bookingDetailsPanel1 = new javax.swing.JPanel();
        entrySlotBookingListLabel4 = new javax.swing.JLabel();
        entrySlotsLabel1 = new javax.swing.JLabel();
        entrySlotsSpinner1 = new javax.swing.JSpinner(new javax.swing.SpinnerNumberModel(1, 1, EventSwipeData.MAX_ENTRY_SLOTS, 1));
        entrySlotBookingListFilePathInput4 = new javax.swing.JFormattedTextField();
        entrySlotBookingListFilePathInput5 = new javax.swing.JFormattedTextField();
        entrySlotBookingListLabel5 = new javax.swing.JLabel();
        entrySlotBookingListLabel6 = new javax.swing.JLabel();
        noWaitingListRadioButton1 = new javax.swing.JRadioButton();
        waitingListLabel1 = new javax.swing.JLabel();
        entrySlotBookingListFilePathInput6 = new javax.swing.JFormattedTextField();
        yesWaitingListRadioButton1 = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        entrySlotBookingListLabel7 = new javax.swing.JLabel();
        entrySlotBookingListLabel8 = new javax.swing.JLabel();
        entrySlotBookingListLabel9 = new javax.swing.JLabel();
        clearButton2 = new javax.swing.JButton();

        mainPanel.setMinimumSize(new java.awt.Dimension(720, 350));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(720, 350));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(eventswipe.EventSwipeApp.class).getContext().getResourceMap(EventSwipeView.class);
        clearButton1.setText(resourceMap.getString("clearButton1.text")); // NOI18N
        clearButton1.setFocusPainted(false);
        clearButton1.setFocusable(false);
        clearButton1.setName("clearButton1"); // NOI18N
        clearButton1.setRequestFocusEnabled(false);
        clearButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButton1ActionPerformed(evt);
            }
        });

        studentNumberInput.setName("studentNumberInput"); // NOI18N
        javax.swing.Action save = new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                EventSwipeApp.getApplication().saveAttendeesToFile();
            }
        };
        javax.swing.Action toggleBooking = new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                checkingModeToggle.doClick();
            }
        };
        javax.swing.Action checkBooking = new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                checkBooking();
            }
        };
        studentNumberInput.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_S,
            java.awt.event.InputEvent.CTRL_DOWN_MASK),
        "save");
    studentNumberInput.getActionMap().put("save", save);
    studentNumberInput.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_T,
        java.awt.event.InputEvent.CTRL_DOWN_MASK),
    "toggleBooking");
    studentNumberInput.getActionMap().put("toggleBooking", toggleBooking);
    studentNumberInput.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),
        "enterStudentNumber");
    studentNumberInput.getActionMap().put("enterStudentNumber",
        checkBooking);

    enterStudentNumberButton.setText(resourceMap.getString("enterStudentNumberButton.text")); // NOI18N
    enterStudentNumberButton.setFocusable(false);
    enterStudentNumberButton.setName("enterStudentNumberButton"); // NOI18N
    enterStudentNumberButton.setRequestFocusEnabled(false);
    enterStudentNumberButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            enterStudentNumberButtonActionPerformed(evt);
        }
    });

    bookingStatusScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
    bookingStatusScrollPane.setName("bookingStatusScrollPane"); // NOI18N

    bookingStatusTextArea.setColumns(20);
    bookingStatusTextArea.setEditable(false);
    bookingStatusTextArea.setRows(5);
    bookingStatusTextArea.setFocusable(false);
    bookingStatusTextArea.setName("bookingStatusTextArea"); // NOI18N
    bookingStatusTextArea.setRequestFocusEnabled(false);
    bookingStatusScrollPane.setViewportView(bookingStatusTextArea);

    backButton.setText(resourceMap.getString("backButton.text")); // NOI18N
    backButton.setFocusable(false);
    backButton.setName("backButton"); // NOI18N
    backButton.setRequestFocusEnabled(false);
    backButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            backButtonActionPerformed(evt);
        }
    });

    saveButton.setText(resourceMap.getString("saveButton.text")); // NOI18N
    saveButton.setFocusable(false);
    saveButton.setName("saveButton"); // NOI18N
    saveButton.setRequestFocusEnabled(false);
    saveButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            saveButtonActionPerformed(evt);
        }
    });

    studentNumberInputLabel.setText(resourceMap.getString("studentNumberInputLabel.text")); // NOI18N
    studentNumberInputLabel.setName("studentNumberInputLabel"); // NOI18N

    statusDisplayTextField.setEditable(false);
    statusDisplayTextField.setText(resourceMap.getString("statusDisplayTextField.text")); // NOI18N
    statusDisplayTextField.setFocusable(false);
    statusDisplayTextField.setFont(resourceMap.getFont("statusDisplayTextField.font")); // NOI18N
    statusDisplayTextField.setName("statusDisplayTextField"); // NOI18N

    entrySlotDisplayTextField.setEditable(false);
    entrySlotDisplayTextField.setText(resourceMap.getString("entrySlotDisplayTextField.text")); // NOI18N
    entrySlotDisplayTextField.setFocusable(false);
    entrySlotDisplayTextField.setFont(resourceMap.getFont("entrySlotDisplayTextField.font")); // NOI18N
    entrySlotDisplayTextField.setName("entrySlotDisplayTextField"); // NOI18N
    entrySlotDisplayTextField.setRequestFocusEnabled(false);

    attendeeCountDisplayTextField.setEditable(false);
    attendeeCountDisplayTextField.setText(resourceMap.getString("attendeeCountDisplayTextField.text")); // NOI18N
    attendeeCountDisplayTextField.setFocusable(false);
    attendeeCountDisplayTextField.setFont(resourceMap.getFont("attendeeCountDisplayTextField.font")); // NOI18N
    attendeeCountDisplayTextField.setName("attendeeCountDisplayTextField"); // NOI18N
    attendeeCountDisplayTextField.setRequestFocusEnabled(false);

    attendeeCountLabel.setText(resourceMap.getString("attendeeCountLabel.text")); // NOI18N
    attendeeCountLabel.setName("attendeeCountLabel"); // NOI18N

    entrySlotLabel.setText(resourceMap.getString("entrySlotLabel.text")); // NOI18N
    entrySlotLabel.setName("entrySlotLabel"); // NOI18N

    statusLabel.setText(resourceMap.getString("statusLabel.text")); // NOI18N
    statusLabel.setName("statusLabel"); // NOI18N

    javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(eventswipe.EventSwipeApp.class).getContext().getActionMap(EventSwipeView.class, this);
    checkingModeToggle.setAction(actionMap.get("checkingModeToggleClick")); // NOI18N
    checkingModeToggle.setText(resourceMap.getString("checkingModeToggle.text")); // NOI18N
    checkingModeToggle.setToolTipText(resourceMap.getString("checkingModeToggle.toolTipText")); // NOI18N
    checkingModeToggle.setFocusPainted(false);
    checkingModeToggle.setFocusable(false);
    checkingModeToggle.setName("checkingModeToggle"); // NOI18N
    checkingModeToggle.setRequestFocusEnabled(false);
    checkingModeToggle.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            checkingModeToggleActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
    mainPanel.setLayout(mainPanelLayout);
    mainPanelLayout.setHorizontalGroup(
        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(bookingStatusScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                            .addComponent(studentNumberInputLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(studentNumberInput)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(enterStudentNumberButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                            .addComponent(statusLabel)
                            .addGap(10, 10, 10)
                            .addComponent(statusDisplayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(entrySlotLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(entrySlotDisplayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(attendeeCountLabel)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(checkingModeToggle, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                        .addComponent(attendeeCountDisplayTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)))
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 212, Short.MAX_VALUE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(211, 211, 211)
                    .addComponent(clearButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
    );
    mainPanelLayout.setVerticalGroup(
        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(mainPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(studentNumberInputLabel)
                .addComponent(studentNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(enterStudentNumberButton)
                .addComponent(checkingModeToggle))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(statusDisplayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(attendeeCountDisplayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(entrySlotDisplayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(statusLabel)
                .addComponent(entrySlotLabel)
                .addComponent(attendeeCountLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(bookingStatusScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(backButton)
                .addComponent(clearButton1)
                .addComponent(saveButton))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    menuBar.setName("menuBar"); // NOI18N

    fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
    fileMenu.setName("fileMenu"); // NOI18N

    toggleMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
    toggleMenuItem.setText(resourceMap.getString("toggleMenuItem.text")); // NOI18N
    toggleMenuItem.setEnabled(false);
    toggleMenuItem.setName("toggleMenuItem"); // NOI18N
    toggleMenuItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            toggleMenuItemActionPerformed(evt);
        }
    });
    fileMenu.add(toggleMenuItem);

    saveMenuItem.setAction(actionMap.get("saveAttendeesToFile")); // NOI18N
    saveMenuItem.setText(resourceMap.getString("saveMenuItem.text")); // NOI18N
    saveMenuItem.setName("saveMenuItem"); // NOI18N
    fileMenu.add(saveMenuItem);

    exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
    exitMenuItem.setName("exitMenuItem"); // NOI18N
    fileMenu.add(exitMenuItem);

    menuBar.add(fileMenu);

    helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
    helpMenu.setName("helpMenu"); // NOI18N

    aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
    aboutMenuItem.setName("aboutMenuItem"); // NOI18N
    helpMenu.add(aboutMenuItem);

    menuBar.add(helpMenu);

    configPanel.setMinimumSize(new java.awt.Dimension(720, 350));
    configPanel.setName("configPanel"); // NOI18N
    configPanel.setPreferredSize(new java.awt.Dimension(720, 350));

    eventTitleInputLabel.setText(resourceMap.getString("eventTitleInputLabel.text")); // NOI18N
    eventTitleInputLabel.setName("eventTitleInputLabel"); // NOI18N

    requireBookingButtonGroup.add(yesBookingRadioButton);
    yesBookingRadioButton.setText(resourceMap.getString("yesBookingRadioButton.text")); // NOI18N
    yesBookingRadioButton.setName("yesBookingRadioButton"); // NOI18N
    yesBookingRadioButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            yesBookingRadioButtonActionPerformed(evt);
        }
    });

    requireBookingButtonGroup.add(noBookingRadioButton);
    noBookingRadioButton.setText(resourceMap.getString("noBookingRadioButton.text")); // NOI18N
    noBookingRadioButton.setName("noBookingRadioButton"); // NOI18N
    noBookingRadioButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            noBookingRadioButtonActionPerformed(evt);
        }
    });

    requireBookingLabel.setText(resourceMap.getString("requireBookingLabel.text")); // NOI18N
    requireBookingLabel.setName("requireBookingLabel"); // NOI18N

    okConfigButton.setText(resourceMap.getString("okConfigButton.text")); // NOI18N
    okConfigButton.setName("okConfigButton"); // NOI18N
    okConfigButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            okConfigButtonActionPerformed(evt);
        }
    });

    titleLabel.setFont(resourceMap.getFont("titleLabel.font")); // NOI18N
    titleLabel.setText(resourceMap.getString("titleLabel.text")); // NOI18N
    titleLabel.setName("titleLabel"); // NOI18N

    bookingDetailsPanel.setEnabled(false);
    bookingDetailsPanel.setName("bookingDetailsPanel"); // NOI18N

    entrySlotBookingListLabel1.setText(resourceMap.getString("entrySlotBookingListLabel1.text")); // NOI18N
    entrySlotBookingListLabel1.setName("entrySlotBookingListLabel1"); // NOI18N

    entrySlotsLabel.setText(resourceMap.getString("entrySlotsLabel.text")); // NOI18N
    entrySlotsLabel.setName("entrySlotsLabel"); // NOI18N

    bookingListBrowseButton1.setText(resourceMap.getString("bookingListBrowseButton1.text")); // NOI18N
    bookingListBrowseButton1.setName("bookingListBrowseButton1"); // NOI18N
    bookingListBrowseButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            browseFileAction(evt);
        }
    });

    entrySlotsSpinner.setName("entrySlotsSpinner"); // NOI18N
    entrySlotsSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
        public void stateChanged(javax.swing.event.ChangeEvent evt) {
            entrySlotsSpinnerStateChanged(evt);
        }
    });

    entrySlotBookingListFilePathInput3.setText(fileInputDefault);
    entrySlotBookingListFilePathInput3.setName("entrySlotBookingListFilePathInput3"); // NOI18N
    entrySlotBookingListFilePathInput3.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            inputFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            inputFocusLost(evt);
        }
    });

    entrySlotBookingListFilePathInput2.setText(fileInputDefault);
    entrySlotBookingListFilePathInput2.setName("entrySlotBookingListFilePathInput2"); // NOI18N
    entrySlotBookingListFilePathInput2.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            inputFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            inputFocusLost(evt);
        }
    });

    entrySlotBookingListLabel3.setText(resourceMap.getString("entrySlotBookingListLabel3.text")); // NOI18N
    entrySlotBookingListLabel3.setName("entrySlotBookingListLabel3"); // NOI18N

    entrySlotBookingListLabel2.setText(resourceMap.getString("entrySlotBookingListLabel2.text")); // NOI18N
    entrySlotBookingListLabel2.setName("entrySlotBookingListLabel2"); // NOI18N

    waitingListFilePathInput.setText(fileInputDefault);
    waitingListFilePathInput.setName("waitingListFilePathInput"); // NOI18N
    waitingListFilePathInput.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            inputFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            inputFocusLost(evt);
        }
    });

    waitingListFileLabel.setText(resourceMap.getString("waitingListFileLabel.text")); // NOI18N
    waitingListFileLabel.setName("waitingListFileLabel"); // NOI18N

    bookingListBrowseButton2.setText(resourceMap.getString("bookingListBrowseButton2.text")); // NOI18N
    bookingListBrowseButton2.setName("bookingListBrowseButton2"); // NOI18N
    bookingListBrowseButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            browseFileAction(evt);
        }
    });

    bookingListBrowseButton3.setText(resourceMap.getString("bookingListBrowseButton3.text")); // NOI18N
    bookingListBrowseButton3.setName("bookingListBrowseButton3"); // NOI18N
    bookingListBrowseButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            browseFileAction(evt);
        }
    });

    waitingListBrowseButton.setText(resourceMap.getString("waitingListBrowseButton.text")); // NOI18N
    waitingListBrowseButton.setName("waitingListBrowseButton"); // NOI18N
    waitingListBrowseButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            browseFileAction(evt);
        }
    });

    waitingListButtonGroup.add(noWaitingListRadioButton);
    noWaitingListRadioButton.setText(resourceMap.getString("noWaitingListRadioButton.text")); // NOI18N
    noWaitingListRadioButton.setName("noWaitingListRadioButton"); // NOI18N
    noWaitingListRadioButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            noWaitingListRadioButtonActionPerformed(evt);
        }
    });

    waitingListLabel.setText(resourceMap.getString("waitingListLabel.text")); // NOI18N
    waitingListLabel.setName("waitingListLabel"); // NOI18N

    entrySlotBookingListFilePathInput1.setText(fileInputDefault);
    entrySlotBookingListFilePathInput1.setName("entrySlotBookingListFilePathInput1"); // NOI18N
    entrySlotBookingListFilePathInput1.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            inputFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            inputFocusLost(evt);
        }
    });

    waitingListButtonGroup.add(yesWaitingListRadioButton);
    yesWaitingListRadioButton.setText(resourceMap.getString("yesWaitingListRadioButton.text")); // NOI18N
    yesWaitingListRadioButton.setName("yesWaitingListRadioButton"); // NOI18N
    yesWaitingListRadioButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            yesWaitingListRadioButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout bookingDetailsPanelLayout = new javax.swing.GroupLayout(bookingDetailsPanel);
    bookingDetailsPanel.setLayout(bookingDetailsPanelLayout);
    bookingDetailsPanelLayout.setHorizontalGroup(
        bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookingDetailsPanelLayout.createSequentialGroup()
            .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                    .addComponent(waitingListLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(yesWaitingListRadioButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(noWaitingListRadioButton)
                    .addGap(160, 160, 160)
                    .addComponent(waitingListFileLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(waitingListFilePathInput, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(waitingListBrowseButton))
                .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                    .addComponent(entrySlotBookingListLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(entrySlotBookingListFilePathInput3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(bookingListBrowseButton3))
                .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                    .addComponent(entrySlotBookingListLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(entrySlotBookingListFilePathInput2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(bookingListBrowseButton2))
                .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                    .addComponent(entrySlotsLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(entrySlotsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(entrySlotBookingListLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(entrySlotBookingListFilePathInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(bookingListBrowseButton1)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    bookingDetailsPanelLayout.setVerticalGroup(
        bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(entrySlotBookingListFilePathInput1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(entrySlotBookingListLabel1)
                .addComponent(bookingListBrowseButton1)
                .addComponent(entrySlotsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(entrySlotsLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(entrySlotBookingListFilePathInput2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(entrySlotBookingListLabel2)
                .addComponent(bookingListBrowseButton2))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(entrySlotBookingListFilePathInput3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(entrySlotBookingListLabel3)
                .addComponent(bookingListBrowseButton3))
            .addGap(26, 26, 26)
            .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(waitingListBrowseButton)
                .addComponent(waitingListFilePathInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(waitingListFileLabel)
                .addComponent(waitingListLabel)
                .addComponent(yesWaitingListRadioButton)
                .addComponent(noWaitingListRadioButton))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    eventTitleInput.setText(titleInputDefault);
    eventTitleInput.setName("eventTitleInput"); // NOI18N
    eventTitleInput.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            inputFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            inputFocusLost(evt);
        }
    });
    javax.swing.Action checkConfiguration = new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            checkConfiguration();
        }
    };
    eventTitleInput.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),
        "checkConfiguration");
    eventTitleInput.getActionMap().put("checkConfiguration", checkConfiguration);

    clearButton.setText(resourceMap.getString("clearButton.text")); // NOI18N
    clearButton.setName("clearButton"); // NOI18N
    clearButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            clearButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout configPanelLayout = new javax.swing.GroupLayout(configPanel);
    configPanel.setLayout(configPanelLayout);
    configPanelLayout.setHorizontalGroup(
        configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(configPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(configPanelLayout.createSequentialGroup()
                    .addComponent(requireBookingLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(yesBookingRadioButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(noBookingRadioButton))
                .addGroup(configPanelLayout.createSequentialGroup()
                    .addComponent(eventTitleInputLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(eventTitleInput, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(titleLabel)
                .addComponent(bookingDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configPanelLayout.createSequentialGroup()
                    .addComponent(okConfigButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 504, Short.MAX_VALUE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
    );
    configPanelLayout.setVerticalGroup(
        configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(configPanelLayout.createSequentialGroup()
            .addGap(34, 34, 34)
            .addComponent(titleLabel)
            .addGap(18, 18, 18)
            .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(eventTitleInputLabel)
                .addComponent(eventTitleInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(requireBookingLabel)
                .addComponent(yesBookingRadioButton)
                .addComponent(noBookingRadioButton))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(bookingDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
            .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(clearButton)
                .addComponent(okConfigButton))
            .addContainerGap())
    );

    preConfigPanel.setMinimumSize(new java.awt.Dimension(720, 350));
    preConfigPanel.setName("preConfigPanel"); // NOI18N

    mainTitle.setFont(resourceMap.getFont("mainTitle.font")); // NOI18N
    mainTitle.setText(resourceMap.getString("mainTitle.text")); // NOI18N
    mainTitle.setName("mainTitle"); // NOI18N

    versionLabel.setFont(resourceMap.getFont("versionLabel.font")); // NOI18N
    versionLabel.setText(resourceMap.getString("versionLabel.text")); // NOI18N
    versionLabel.setName("versionLabel"); // NOI18N

    smallLogoLabel.setIcon(resourceMap.getIcon("smallLogoLabel.icon")); // NOI18N
    smallLogoLabel.setText(resourceMap.getString("smallLogoLabel.text")); // NOI18N
    smallLogoLabel.setName("smallLogoLabel"); // NOI18N

    jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
    jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
    jLabel1.setName("jLabel1"); // NOI18N

    jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
    jLabel2.setName("jLabel2"); // NOI18N

    jTextField4.setText(resourceMap.getString("jTextField4.text")); // NOI18N
    jTextField4.setName("jTextField4"); // NOI18N

    jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
    jLabel3.setName("jLabel3"); // NOI18N

    jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
    jButton4.setName("jButton4"); // NOI18N

    jPasswordField1.setText(resourceMap.getString("jPasswordField1.text")); // NOI18N
    jPasswordField1.setName("jPasswordField1"); // NOI18N

    javax.swing.GroupLayout preConfigPanelLayout = new javax.swing.GroupLayout(preConfigPanel);
    preConfigPanel.setLayout(preConfigPanelLayout);
    preConfigPanelLayout.setHorizontalGroup(
        preConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(preConfigPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(preConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(preConfigPanelLayout.createSequentialGroup()
                    .addComponent(smallLogoLabel)
                    .addGroup(preConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(preConfigPanelLayout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(mainTitle))
                        .addGroup(preConfigPanelLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(versionLabel))))
                .addComponent(jLabel2)
                .addComponent(jLabel3)
                .addGroup(preConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)))
            .addContainerGap(367, Short.MAX_VALUE))
    );
    preConfigPanelLayout.setVerticalGroup(
        preConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(preConfigPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(preConfigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(smallLogoLabel)
                .addGroup(preConfigPanelLayout.createSequentialGroup()
                    .addComponent(mainTitle)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(versionLabel)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
            .addComponent(jLabel1)
            .addGap(18, 18, 18)
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(11, 11, 11)
            .addComponent(jButton4)
            .addGap(43, 43, 43))
    );

    configPanel1.setMinimumSize(new java.awt.Dimension(720, 350));
    configPanel1.setName("configPanel1"); // NOI18N

    okConfigButton1.setText(resourceMap.getString("okConfigButton1.text")); // NOI18N
    okConfigButton1.setName("okConfigButton1"); // NOI18N
    okConfigButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            okConfigButton1ActionPerformed(evt);
        }
    });

    titleLabel1.setFont(resourceMap.getFont("titleLabel1.font")); // NOI18N
    titleLabel1.setText(resourceMap.getString("titleLabel1.text")); // NOI18N
    titleLabel1.setName("titleLabel1"); // NOI18N

    bookingDetailsPanel1.setEnabled(false);
    bookingDetailsPanel1.setName("bookingDetailsPanel1"); // NOI18N

    entrySlotBookingListLabel4.setText(resourceMap.getString("entrySlotBookingListLabel4.text")); // NOI18N
    entrySlotBookingListLabel4.setName("entrySlotBookingListLabel4"); // NOI18N

    entrySlotsLabel1.setText(resourceMap.getString("entrySlotsLabel1.text")); // NOI18N
    entrySlotsLabel1.setName("entrySlotsLabel1"); // NOI18N

    entrySlotsSpinner1.setName("entrySlotsSpinner1"); // NOI18N
    entrySlotsSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
        public void stateChanged(javax.swing.event.ChangeEvent evt) {
            entrySlotsSpinner1StateChanged(evt);
        }
    });

    entrySlotBookingListFilePathInput4.setText(idInputDefault);
    entrySlotBookingListFilePathInput4.setEnabled(false);
    entrySlotBookingListFilePathInput4.setName("entrySlotBookingListFilePathInput4"); // NOI18N
    entrySlotBookingListFilePathInput4.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            entrySlotBookingListFilePathInput4inputFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            entrySlotBookingListFilePathInput4inputFocusLost(evt);
        }
    });

    entrySlotBookingListFilePathInput5.setText(idInputDefault);
    entrySlotBookingListFilePathInput5.setEnabled(false);
    entrySlotBookingListFilePathInput5.setName("entrySlotBookingListFilePathInput5"); // NOI18N
    entrySlotBookingListFilePathInput5.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            entrySlotBookingListFilePathInput5inputFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            entrySlotBookingListFilePathInput5inputFocusLost(evt);
        }
    });

    entrySlotBookingListLabel5.setText(resourceMap.getString("entrySlotBookingListLabel5.text")); // NOI18N
    entrySlotBookingListLabel5.setName("entrySlotBookingListLabel5"); // NOI18N

    entrySlotBookingListLabel6.setText(resourceMap.getString("entrySlotBookingListLabel6.text")); // NOI18N
    entrySlotBookingListLabel6.setName("entrySlotBookingListLabel6"); // NOI18N

    waitingListButtonGroup.add(noWaitingListRadioButton1);
    noWaitingListRadioButton1.setText(resourceMap.getString("noWaitingListRadioButton1.text")); // NOI18N
    noWaitingListRadioButton1.setName("noWaitingListRadioButton1"); // NOI18N
    noWaitingListRadioButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            noWaitingListRadioButton1ActionPerformed(evt);
        }
    });

    waitingListLabel1.setText(resourceMap.getString("waitingListLabel1.text")); // NOI18N
    waitingListLabel1.setName("waitingListLabel1"); // NOI18N

    entrySlotBookingListFilePathInput6.setText(idInputDefault);
    entrySlotBookingListFilePathInput6.setName("entrySlotBookingListFilePathInput6"); // NOI18N
    entrySlotBookingListFilePathInput6.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            entrySlotBookingListFilePathInput6inputFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            entrySlotBookingListFilePathInput6inputFocusLost(evt);
        }
    });

    waitingListButtonGroup.add(yesWaitingListRadioButton1);
    yesWaitingListRadioButton1.setSelected(true);
    yesWaitingListRadioButton1.setText(resourceMap.getString("yesWaitingListRadioButton1.text")); // NOI18N
    yesWaitingListRadioButton1.setName("yesWaitingListRadioButton1"); // NOI18N
    yesWaitingListRadioButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            yesWaitingListRadioButton1ActionPerformed(evt);
        }
    });

    jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
    jTextField1.setEnabled(false);
    jTextField1.setName("jTextField1"); // NOI18N

    jTextField2.setText(resourceMap.getString("jTextField2.text")); // NOI18N
    jTextField2.setEnabled(false);
    jTextField2.setName("jTextField2"); // NOI18N

    jTextField3.setText(resourceMap.getString("jTextField3.text")); // NOI18N
    jTextField3.setEnabled(false);
    jTextField3.setName("jTextField3"); // NOI18N

    jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
    jButton1.setName("jButton1"); // NOI18N

    jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
    jButton2.setEnabled(false);
    jButton2.setName("jButton2"); // NOI18N

    jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
    jButton3.setEnabled(false);
    jButton3.setName("jButton3"); // NOI18N

    entrySlotBookingListLabel7.setText(resourceMap.getString("entrySlotBookingListLabel7.text")); // NOI18N
    entrySlotBookingListLabel7.setName("entrySlotBookingListLabel7"); // NOI18N

    entrySlotBookingListLabel8.setText(resourceMap.getString("entrySlotBookingListLabel8.text")); // NOI18N
    entrySlotBookingListLabel8.setName("entrySlotBookingListLabel8"); // NOI18N

    entrySlotBookingListLabel9.setText(resourceMap.getString("entrySlotBookingListLabel9.text")); // NOI18N
    entrySlotBookingListLabel9.setName("entrySlotBookingListLabel9"); // NOI18N

    javax.swing.GroupLayout bookingDetailsPanel1Layout = new javax.swing.GroupLayout(bookingDetailsPanel1);
    bookingDetailsPanel1.setLayout(bookingDetailsPanel1Layout);
    bookingDetailsPanel1Layout.setHorizontalGroup(
        bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(bookingDetailsPanel1Layout.createSequentialGroup()
            .addGroup(bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(bookingDetailsPanel1Layout.createSequentialGroup()
                    .addComponent(entrySlotsLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(entrySlotsSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(24, 24, 24)
                    .addGroup(bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(bookingDetailsPanel1Layout.createSequentialGroup()
                            .addComponent(entrySlotBookingListLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(entrySlotBookingListFilePathInput6, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                        .addGroup(bookingDetailsPanel1Layout.createSequentialGroup()
                            .addGap(80, 80, 80)
                            .addComponent(waitingListLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(yesWaitingListRadioButton1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(noWaitingListRadioButton1))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookingDetailsPanel1Layout.createSequentialGroup()
                            .addGap(46, 46, 46)
                            .addComponent(entrySlotBookingListLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE))))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookingDetailsPanel1Layout.createSequentialGroup()
                    .addGap(306, 306, 306)
                    .addGroup(bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(entrySlotBookingListLabel9)
                        .addComponent(entrySlotBookingListLabel5))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                        .addGroup(bookingDetailsPanel1Layout.createSequentialGroup()
                            .addComponent(entrySlotBookingListFilePathInput4, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookingDetailsPanel1Layout.createSequentialGroup()
                    .addGap(306, 306, 306)
                    .addGroup(bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(entrySlotBookingListLabel8)
                        .addComponent(entrySlotBookingListLabel6))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(bookingDetailsPanel1Layout.createSequentialGroup()
                            .addComponent(entrySlotBookingListFilePathInput5, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                        .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE))))
            .addContainerGap())
    );
    bookingDetailsPanel1Layout.setVerticalGroup(
        bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(bookingDetailsPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(entrySlotsLabel1)
                .addComponent(entrySlotsSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(entrySlotBookingListLabel4)
                .addComponent(entrySlotBookingListFilePathInput6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton1))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(entrySlotBookingListLabel7))
            .addGap(33, 33, 33)
            .addGroup(bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(entrySlotBookingListLabel6)
                .addComponent(entrySlotBookingListFilePathInput5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton2))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(entrySlotBookingListLabel8))
            .addGap(37, 37, 37)
            .addGroup(bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(entrySlotBookingListFilePathInput4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(entrySlotBookingListLabel5)
                .addComponent(jButton3))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(entrySlotBookingListLabel9))
            .addGap(26, 26, 26)
            .addGroup(bookingDetailsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(waitingListLabel1)
                .addComponent(yesWaitingListRadioButton1)
                .addComponent(noWaitingListRadioButton1))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    clearButton2.setText(resourceMap.getString("clearButton2.text")); // NOI18N
    clearButton2.setName("clearButton2"); // NOI18N
    clearButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            clearButton2ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout configPanel1Layout = new javax.swing.GroupLayout(configPanel1);
    configPanel1.setLayout(configPanel1Layout);
    configPanel1Layout.setHorizontalGroup(
        configPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(configPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(configPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(configPanel1Layout.createSequentialGroup()
                    .addComponent(bookingDetailsPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap())
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configPanel1Layout.createSequentialGroup()
                    .addComponent(titleLabel1)
                    .addContainerGap(573, Short.MAX_VALUE))
                .addGroup(configPanel1Layout.createSequentialGroup()
                    .addComponent(okConfigButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 495, Short.MAX_VALUE)
                    .addComponent(clearButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(22, 22, 22))))
    );
    configPanel1Layout.setVerticalGroup(
        configPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(configPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(titleLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(bookingDetailsPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(configPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(okConfigButton1)
                .addComponent(clearButton2))
            .addContainerGap())
    );

    setComponent(configPanel);
    setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    @Action
    private void okConfigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okConfigButtonActionPerformed
        checkConfiguration();
    }//GEN-LAST:event_okConfigButtonActionPerformed

    @Action
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        switchToPanel(configPanel);
    }//GEN-LAST:event_backButtonActionPerformed

    @Action
    private void yesBookingRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesBookingRadioButtonActionPerformed
        updateBookingPanel(yesBookingRadioButton.isSelected());
    }//GEN-LAST:event_yesBookingRadioButtonActionPerformed

    @Action
    private void noBookingRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noBookingRadioButtonActionPerformed
        updateBookingPanel(yesBookingRadioButton.isSelected());
    }//GEN-LAST:event_noBookingRadioButtonActionPerformed

    @Action
    private void yesWaitingListRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesWaitingListRadioButtonActionPerformed
        updateBookingPanel(true);
    }//GEN-LAST:event_yesWaitingListRadioButtonActionPerformed

    @Action
    private void noWaitingListRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noWaitingListRadioButtonActionPerformed
        updateBookingPanel(true);
    }//GEN-LAST:event_noWaitingListRadioButtonActionPerformed

    @Action
    private void entrySlotsSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_entrySlotsSpinnerStateChanged
        updateBookingPanel(true);
    }//GEN-LAST:event_entrySlotsSpinnerStateChanged

    @Action
    private void inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputFocusGained
        JFormattedTextField input = (JFormattedTextField) evt.getSource();
        if (input == eventTitleInput && input.getText().equals(titleInputDefault))
            input.setText("");
        else if (input.getText().equals(fileInputDefault))
            input.setText("");
    }//GEN-LAST:event_inputFocusGained

    @Action
    private void inputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputFocusLost
        JFormattedTextField input = (JFormattedTextField) evt.getSource();
        if (input == eventTitleInput && input.getText().equals(""))
            input.setText(titleInputDefault);
        else if (input.getText().equals(""))
            input.setText(fileInputDefault);
    }//GEN-LAST:event_inputFocusLost

    @Action
    private void browseFileAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseFileAction
        JFileChooser fc = new JFileChooser();
        File file = null;
        fc.addChoosableFileFilter(new TextCSVFilter());
        int returnVal = fc.showDialog(EventSwipeApp.getApplication().getMainFrame(), "Choose");
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fc.getSelectedFile();
            if (evt.getSource() == bookingListBrowseButton1) {
                entrySlotBookingListFilePathInput1.setText(file.getPath());
            }
            if (evt.getSource() == bookingListBrowseButton2) {
                entrySlotBookingListFilePathInput2.setText(file.getPath());
            }
            if (evt.getSource() == bookingListBrowseButton3) {
                entrySlotBookingListFilePathInput3.setText(file.getPath());
            }
            if (evt.getSource() == waitingListBrowseButton) {
                waitingListFilePathInput.setText(file.getPath());
            }
        }
    }//GEN-LAST:event_browseFileAction

    @Action
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clearSession(evt);
    }//GEN-LAST:event_clearButtonActionPerformed

    @Action
    private void enterStudentNumberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterStudentNumberButtonActionPerformed
        checkBooking();
    }//GEN-LAST:event_enterStudentNumberButtonActionPerformed
    
    @Action
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        EventSwipeApp.getApplication().saveAttendeesToFile();
    }//GEN-LAST:event_saveButtonActionPerformed

    @Action
    private void checkingModeToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkingModeToggleActionPerformed
        toggleCheckingMode();
    }//GEN-LAST:event_checkingModeToggleActionPerformed

    @Action
    private void clearButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButton1ActionPerformed
        clearSession(evt);
    }//GEN-LAST:event_clearButton1ActionPerformed

    @Action
    private void toggleMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleMenuItemActionPerformed
        checkingModeToggle.doClick();
    }//GEN-LAST:event_toggleMenuItemActionPerformed

    private void okConfigButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okConfigButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_okConfigButton1ActionPerformed

    private void entrySlotsSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_entrySlotsSpinner1StateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_entrySlotsSpinner1StateChanged

    private void entrySlotBookingListFilePathInput4inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_entrySlotBookingListFilePathInput4inputFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_entrySlotBookingListFilePathInput4inputFocusGained

    private void entrySlotBookingListFilePathInput4inputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_entrySlotBookingListFilePathInput4inputFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_entrySlotBookingListFilePathInput4inputFocusLost

    private void entrySlotBookingListFilePathInput5inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_entrySlotBookingListFilePathInput5inputFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_entrySlotBookingListFilePathInput5inputFocusGained

    private void entrySlotBookingListFilePathInput5inputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_entrySlotBookingListFilePathInput5inputFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_entrySlotBookingListFilePathInput5inputFocusLost

    private void noWaitingListRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noWaitingListRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noWaitingListRadioButton1ActionPerformed

    private void entrySlotBookingListFilePathInput6inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_entrySlotBookingListFilePathInput6inputFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_entrySlotBookingListFilePathInput6inputFocusGained

    private void entrySlotBookingListFilePathInput6inputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_entrySlotBookingListFilePathInput6inputFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_entrySlotBookingListFilePathInput6inputFocusLost

    private void yesWaitingListRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesWaitingListRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yesWaitingListRadioButton1ActionPerformed

    private void clearButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clearButton2ActionPerformed
    
    private void checkConfiguration() {
        EventSwipeApp.getApplication().setBookingFlag(yesBookingRadioButton.isSelected());
        EventSwipeApp.getApplication().setWaitingListFlag(yesWaitingListRadioButton.isSelected());
        EventSwipeApp.getApplication().setSlots((Integer)entrySlotsSpinner.getValue());
        boolean configOK = false;
        if (eventTitleInput.getText().equals(titleInputDefault)) {
            JOptionPane.showMessageDialog(EventSwipeApp.getApplication().getMainFrame(),
                                          "You have not entered an event title. Please write one!",
                                          "Event title error",
                                          JOptionPane.ERROR_MESSAGE);
        }
        else {
            EventSwipeApp.getApplication().setEventTitle(eventTitleInput.getText());
            configOK = true;
        }
        if (configOK && EventSwipeApp.getApplication().getBookingFlag() && EventSwipeApp.getApplication().getSlots() > 0)
            configOK = EventSwipeApp.getApplication().setFile(BookingList.BOOKING_1, new File(entrySlotBookingListFilePathInput1.getText()));
        if (configOK && EventSwipeApp.getApplication().getBookingFlag() && EventSwipeApp.getApplication().getSlots() > 1)
            configOK = EventSwipeApp.getApplication().setFile(BookingList.BOOKING_2, new File(entrySlotBookingListFilePathInput2.getText()));
        if (configOK && EventSwipeApp.getApplication().getBookingFlag() && EventSwipeApp.getApplication().getSlots() > 2)
            configOK = EventSwipeApp.getApplication().setFile(BookingList.BOOKING_3, new File(entrySlotBookingListFilePathInput3.getText()));
        if (configOK && EventSwipeApp.getApplication().getBookingFlag() && EventSwipeApp.getApplication().getWaitingListFlag())
            configOK = EventSwipeApp.getApplication().setFile(BookingList.WAITING_LIST, new File(waitingListFilePathInput.getText()));
        if (configOK) {
            EventSwipeApp.getApplication().createLog(eventTitleInput.getText());
            switchToPanel(mainPanel);
        }
    }

    private void checkBooking() {
        String stuNumber = studentNumberInput.getText();
        if (stuNumber.isEmpty()) {
            JOptionPane.showMessageDialog(EventSwipeApp.getApplication().getMainFrame(),
                                          "Please enter a student number!",
                                          "No student number",
                                          JOptionPane.ERROR_MESSAGE);
        }
        else {
            updateBookingStatus(EventSwipeApp.getApplication().checkBooking(stuNumber));
        }
    }

    private void updateBookingStatus(Booking booking) {
        String stuNumber = booking.getStuNumber();
        String message = "Student " + stuNumber;
        String slot = booking.getEntrySlot() == 0 ? "N/A" : booking.getEntrySlot().toString();
        slot = booking.isOnWaitingList() ? "W/L" : slot;
        String bookingStatus = "";
        if (booking.isAlreadyRecorded()) {
            message += " has already been recorded";
            bookingStatus = "Already recorded";
        }
        else if(booking.isOnWaitingList()) {
            Utils.pressAlt();
            int reply = JOptionPane.showConfirmDialog(EventSwipeApp.getApplication().getMainFrame(),
                                                      "Student is on the waiting list. "
                                                      + "Allow student to enter?",
                                                      "Student on waiting list",
                                                      JOptionPane.YES_NO_OPTION);
            Utils.releaseAlt();
            if (reply == JOptionPane.YES_OPTION) {
                EventSwipeApp.getApplication().recordAttendance(stuNumber, 0);
                bookingStatus = "Recorded";
                message += " has been recorded";
            }
            else {
                bookingStatus = "Waiting list";
                message += " is on the waiting list";
            }
        }
        else if (booking.isBooked()) {
            if (EventSwipeApp.getApplication().getBookingFlag()) {
                bookingStatus = "Booked";
                message += " has booked";
                if (EventSwipeApp.getApplication().getSlots() > 1) {
                    message += " for entry slot " + slot;
                }
            }
            else {
                bookingStatus = "Recorded";
                message += " has been recorded";
            }
        }
        else { //not booked
            Utils.pressAlt();
            int reply = JOptionPane.showConfirmDialog(EventSwipeApp.getApplication().getMainFrame(),
                                                      "Student is not booked. "
                                                      + "Allow student to enter?",
                                                      "Student not booked",
                                                      JOptionPane.YES_NO_OPTION);
            Utils.releaseAlt();
            if (reply == JOptionPane.YES_OPTION) {
                EventSwipeApp.getApplication().recordAttendance(stuNumber, 0);
                bookingStatus = "Recorded";
                message += " has been recorded";
            }
            else {
                message += " has NOT booked onto this event";
                bookingStatus = "Not booked";
            }
        }
        displayBookingStatus(bookingStatus, slot);
        displayBookingMessage(message);
        EventSwipeApp.getApplication().log(message);
    }

    private void displayBookingMessage(String message) {
        message += "\n";
        bookingStatusTextArea.append(message);
        studentNumberInput.setText("");
        studentNumberInput.requestFocusInWindow();
    }

    private void displayBookingStatus(String statusMessage, String slot) {
        statusDisplayTextField.setText(statusMessage);
        entrySlotDisplayTextField.setText(slot);
        Color color;
        boolean enabled;
        if(statusMessage.equals("Booked")) {
            color = Color.GREEN;
            enabled = true;
            attendeeCountDisplayTextField.setText(EventSwipeApp.getApplication()
                                                  .getAttendeeCount());
        }
        else if(statusMessage.equals("Recorded") || statusMessage.equals("")) {
            color = Color.WHITE;
            enabled = false;
            attendeeCountDisplayTextField.setText(EventSwipeApp.getApplication()
                                                  .getAttendeeCount());
        }
        else {
            enabled = false;
            color = statusMessage.equals("Not booked") ? Color.RED : Color.ORANGE;
        }
        statusDisplayTextField.setBackground(color);
        entrySlotLabel.setEnabled(enabled);
        entrySlotDisplayTextField.setEnabled(enabled);
        //set up and start timer to remove background colour from bookking status
        int delay = 250; //milliseconds
        ActionListener taskPerformer = new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                statusDisplayTextField.setBackground(null);
            }
        };
        Timer timer = new Timer(delay, taskPerformer);
        timer.setRepeats(false);
        timer.start();
    }

        private void switchToPanel(JPanel panel) {
        JFrame mainFrame = EventSwipeApp.getApplication().getMainFrame();
        mainFrame.setContentPane(panel);
        if (panel == mainPanel)
            studentNumberInput.requestFocusInWindow();
        panel.revalidate();
        mainFrame.repaint();
    }

    private void updateBookingPanel(boolean enabled) {
        Integer slots = (Integer)entrySlotsSpinner.getValue();
        bookingDetailsPanel.setEnabled(enabled);
        bookingListBrowseButton1.setEnabled(enabled);
        bookingListBrowseButton2.setEnabled(enabled && slots > 1);
        bookingListBrowseButton3.setEnabled(enabled && slots > 2);
        waitingListBrowseButton.setEnabled(enabled &&
                                           yesWaitingListRadioButton.isSelected());
        entrySlotBookingListFilePathInput1.setEnabled(enabled);
        entrySlotBookingListFilePathInput2.setEnabled(enabled && slots > 1);
        entrySlotBookingListFilePathInput3.setEnabled(enabled && slots > 2);
        waitingListFilePathInput.setEnabled(enabled &&
                                            yesWaitingListRadioButton.isSelected());
        entrySlotBookingListLabel1.setEnabled(enabled);
        entrySlotBookingListLabel2.setEnabled(enabled && slots > 1);
        entrySlotBookingListLabel3.setEnabled(enabled && slots > 2);
        waitingListFileLabel.setEnabled(enabled &&
                             yesWaitingListRadioButton.isSelected());
        entrySlotsLabel.setEnabled(enabled);
        entrySlotsSpinner.setEnabled(enabled);
        noWaitingListRadioButton.setEnabled(enabled);
        yesWaitingListRadioButton.setEnabled(enabled);
        waitingListLabel.setEnabled(enabled);
        entrySlotLabel.setEnabled(enabled);
        entrySlotDisplayTextField.setText(enabled ? "": "N/A");
        entrySlotDisplayTextField.setEnabled(enabled);
        checkingModeToggle.setEnabled(enabled);
        checkingModeToggle.setText(enabled ? "Checking booking lists" :
                                             "Recording all students");
        checkingModeToggle.setSelected(enabled);
        toggleMenuItem.setEnabled(enabled);
    }

    private void toggleCheckingMode() {
        if (checkingModeToggle.isSelected()) {
            EventSwipeApp.getApplication().setBookingFlag(true);
            checkingModeToggle.setText("Checking booking lists");
        }
        else {
            EventSwipeApp.getApplication().setBookingFlag(false);
            checkingModeToggle.setText("Recording all students");
        }
    }

    private void clearSession(java.awt.event.ActionEvent evt) {
        Utils.pressAlt();
        int reply = JOptionPane.showConfirmDialog(EventSwipeApp.getApplication().getMainFrame(),
                                                      "Clear all booking data and restart session?",
                                                      "Clear all data warning",
                                                      JOptionPane.YES_NO_OPTION);
        Utils.releaseAlt();
        if (reply == JOptionPane.YES_OPTION) {
            if (evt.getSource().equals(clearButton1))
                switchToPanel(configPanel);
            EventSwipeApp.getApplication().clearData();
            eventTitleInput.setText(titleInputDefault);
            entrySlotBookingListFilePathInput1.setText(fileInputDefault);
            entrySlotBookingListFilePathInput2.setText(fileInputDefault);
            entrySlotBookingListFilePathInput3.setText(fileInputDefault);
            waitingListFilePathInput.setText(fileInputDefault);
            entrySlotsSpinner.setValue(1);
            noWaitingListRadioButton.setSelected(true);
            noBookingRadioButton.setSelected(true);
            displayBookingStatus("", "N/A");
            bookingStatusTextArea.setText("");
            eventTitleInput.requestFocusInWindow();
            updateBookingPanel(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField attendeeCountDisplayTextField;
    private javax.swing.JLabel attendeeCountLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JPanel bookingDetailsPanel;
    private javax.swing.JPanel bookingDetailsPanel1;
    private javax.swing.JButton bookingListBrowseButton1;
    private javax.swing.JButton bookingListBrowseButton2;
    private javax.swing.JButton bookingListBrowseButton3;
    private javax.swing.JScrollPane bookingStatusScrollPane;
    private javax.swing.JTextArea bookingStatusTextArea;
    private javax.swing.JToggleButton checkingModeToggle;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton clearButton1;
    private javax.swing.JButton clearButton2;
    private javax.swing.JPanel configPanel;
    private javax.swing.JPanel configPanel1;
    private javax.swing.JButton enterStudentNumberButton;
    private javax.swing.JFormattedTextField entrySlotBookingListFilePathInput1;
    private javax.swing.JFormattedTextField entrySlotBookingListFilePathInput2;
    private javax.swing.JFormattedTextField entrySlotBookingListFilePathInput3;
    private javax.swing.JFormattedTextField entrySlotBookingListFilePathInput4;
    private javax.swing.JFormattedTextField entrySlotBookingListFilePathInput5;
    private javax.swing.JFormattedTextField entrySlotBookingListFilePathInput6;
    private javax.swing.JLabel entrySlotBookingListLabel1;
    private javax.swing.JLabel entrySlotBookingListLabel2;
    private javax.swing.JLabel entrySlotBookingListLabel3;
    private javax.swing.JLabel entrySlotBookingListLabel4;
    private javax.swing.JLabel entrySlotBookingListLabel5;
    private javax.swing.JLabel entrySlotBookingListLabel6;
    private javax.swing.JLabel entrySlotBookingListLabel7;
    private javax.swing.JLabel entrySlotBookingListLabel8;
    private javax.swing.JLabel entrySlotBookingListLabel9;
    private javax.swing.JFormattedTextField entrySlotDisplayTextField;
    private javax.swing.JLabel entrySlotLabel;
    private javax.swing.JLabel entrySlotsLabel;
    private javax.swing.JLabel entrySlotsLabel1;
    private javax.swing.JSpinner entrySlotsSpinner;
    private javax.swing.JSpinner entrySlotsSpinner1;
    private javax.swing.JFormattedTextField eventTitleInput;
    private javax.swing.JLabel eventTitleInputLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel mainTitle;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JRadioButton noBookingRadioButton;
    private javax.swing.JRadioButton noWaitingListRadioButton;
    private javax.swing.JRadioButton noWaitingListRadioButton1;
    private javax.swing.JButton okConfigButton;
    private javax.swing.JButton okConfigButton1;
    private javax.swing.JPanel preConfigPanel;
    private javax.swing.ButtonGroup requireBookingButtonGroup;
    private javax.swing.JLabel requireBookingLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JLabel smallLogoLabel;
    private javax.swing.JFormattedTextField statusDisplayTextField;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JFormattedTextField studentNumberInput;
    private javax.swing.JLabel studentNumberInputLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel titleLabel1;
    private javax.swing.JMenuItem toggleMenuItem;
    private javax.swing.JLabel versionLabel;
    private javax.swing.JButton waitingListBrowseButton;
    private javax.swing.ButtonGroup waitingListButtonGroup;
    private javax.swing.JLabel waitingListFileLabel;
    private javax.swing.JFormattedTextField waitingListFilePathInput;
    private javax.swing.JLabel waitingListLabel;
    private javax.swing.JLabel waitingListLabel1;
    private javax.swing.JRadioButton yesBookingRadioButton;
    private javax.swing.JRadioButton yesWaitingListRadioButton;
    private javax.swing.JRadioButton yesWaitingListRadioButton1;
    // End of variables declaration//GEN-END:variables
    private JDialog aboutBox;
    private String titleInputDefault;
    private String fileInputDefault;
    private String idInputDefault;

}
