/*
 * EventSwipeView.java
 */
package eventswipe;

import eventswipe.EventSwipeData.FileFunction;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JPanel;
import org.jdesktop.application.Action;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * The application's main frame.
 */
public class EventSwipeView extends FrameView {

    public EventSwipeView(SingleFrameApplication app) {
        super(app);
        initComponents();
        updateBookingPanel(false);
        try {
            Image i = ImageIO.read(getClass().getResource("/eventswipe/resources/logo.jpeg"));
            this.getFrame().setIconImage(i);
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }
        this.getFrame().setPreferredSize(new Dimension(750, 410));
        this.getFrame().setResizable(false);
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = EventSwipeApp.getApplication().getMainFrame();
            aboutBox = new EventSwipeAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        EventSwipeApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        studentNumberInput = new javax.swing.JFormattedTextField();
        enterStudentNumberButton = new javax.swing.JButton();
        bookingStatusScrollPane = new javax.swing.JScrollPane();
        bookingStatusTextArea = new javax.swing.JTextArea();
        backButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        studentNumberInputLabel = new javax.swing.JLabel();
        statusDisplayTextField = new javax.swing.JFormattedTextField();
        entrySlotDisplayTextField = new javax.swing.JFormattedTextField();
        attendeeCountDisplayTextField = new javax.swing.JFormattedTextField();
        attendeeCountLabel = new javax.swing.JLabel();
        entrySlotLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        saveMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        configPanel = new javax.swing.JPanel();
        eventTitleInputLabel = new javax.swing.JLabel();
        yesBookingRadioButton = new javax.swing.JRadioButton();
        noBookingRadioButton = new javax.swing.JRadioButton();
        requireBookingLabel = new javax.swing.JLabel();
        okConfigButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        bookingDetailsPanel = new javax.swing.JPanel();
        entrySlotBookingListLabel1 = new javax.swing.JLabel();
        entrySlotsLabel = new javax.swing.JLabel();
        bookingListBrowseButton1 = new javax.swing.JButton();
        entrySlotsSpinner = new javax.swing.JSpinner(new javax.swing.SpinnerNumberModel(1, 1, EventSwipeData.MAX_ENTRY_SLOTS, 1));
        entrySlotBookingListFilePathInput3 = new javax.swing.JFormattedTextField();
        entrySlotBookingListFilePathInput2 = new javax.swing.JFormattedTextField();
        entrySlotBookingListLabel3 = new javax.swing.JLabel();
        entrySlotBookingListLabel2 = new javax.swing.JLabel();
        waitingListFilePathInput = new javax.swing.JFormattedTextField();
        waitingListFileLabel = new javax.swing.JLabel();
        bookingListBrowseButton2 = new javax.swing.JButton();
        bookingListBrowseButton3 = new javax.swing.JButton();
        waitingListBrowseButton = new javax.swing.JButton();
        noWaitingListRadioButton = new javax.swing.JRadioButton();
        waitingListLabel = new javax.swing.JLabel();
        entrySlotBookingListFilePathInput1 = new javax.swing.JFormattedTextField();
        yesWaitingListRadioButton = new javax.swing.JRadioButton();
        eventTitleInput = new javax.swing.JFormattedTextField();
        clearButton = new javax.swing.JButton();
        requireBookingButtonGroup = new javax.swing.ButtonGroup();
        waitingListButtonGroup = new javax.swing.ButtonGroup();

        mainPanel.setMinimumSize(new java.awt.Dimension(720, 350));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(720, 350));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(eventswipe.EventSwipeApp.class).getContext().getResourceMap(EventSwipeView.class);
        studentNumberInput.setText(resourceMap.getString("studentNumberInput.text")); // NOI18N
        studentNumberInput.setName("studentNumberInput"); // NOI18N
        studentNumberInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                studentNumberInputKeyPressed(evt);
            }
        });

        enterStudentNumberButton.setText(resourceMap.getString("enterStudentNumberButton.text")); // NOI18N
        enterStudentNumberButton.setFocusable(false);
        enterStudentNumberButton.setName("enterStudentNumberButton"); // NOI18N
        enterStudentNumberButton.setRequestFocusEnabled(false);
        enterStudentNumberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterStudentNumberButtonActionPerformed(evt);
            }
        });

        bookingStatusScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        bookingStatusScrollPane.setName("bookingStatusScrollPane"); // NOI18N

        bookingStatusTextArea.setColumns(20);
        bookingStatusTextArea.setEditable(false);
        bookingStatusTextArea.setRows(5);
        bookingStatusTextArea.setFocusable(false);
        bookingStatusTextArea.setName("bookingStatusTextArea"); // NOI18N
        bookingStatusTextArea.setRequestFocusEnabled(false);
        bookingStatusScrollPane.setViewportView(bookingStatusTextArea);

        backButton.setText(resourceMap.getString("backButton.text")); // NOI18N
        backButton.setFocusable(false);
        backButton.setName("backButton"); // NOI18N
        backButton.setRequestFocusEnabled(false);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        saveButton.setText(resourceMap.getString("saveButton.text")); // NOI18N
        saveButton.setFocusable(false);
        saveButton.setName("saveButton"); // NOI18N
        saveButton.setRequestFocusEnabled(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        studentNumberInputLabel.setText(resourceMap.getString("studentNumberInputLabel.text")); // NOI18N
        studentNumberInputLabel.setName("studentNumberInputLabel"); // NOI18N

        statusDisplayTextField.setEditable(false);
        statusDisplayTextField.setText(resourceMap.getString("statusDisplayTextField.text")); // NOI18N
        statusDisplayTextField.setFocusable(false);
        statusDisplayTextField.setFont(resourceMap.getFont("statusDisplayTextField.font")); // NOI18N
        statusDisplayTextField.setName("statusDisplayTextField"); // NOI18N

        entrySlotDisplayTextField.setEditable(false);
        entrySlotDisplayTextField.setText(resourceMap.getString("entrySlotDisplayTextField.text")); // NOI18N
        entrySlotDisplayTextField.setFocusable(false);
        entrySlotDisplayTextField.setFont(resourceMap.getFont("entrySlotDisplayTextField.font")); // NOI18N
        entrySlotDisplayTextField.setName("entrySlotDisplayTextField"); // NOI18N
        entrySlotDisplayTextField.setRequestFocusEnabled(false);

        attendeeCountDisplayTextField.setEditable(false);
        attendeeCountDisplayTextField.setText(resourceMap.getString("attendeeCountDisplayTextField.text")); // NOI18N
        attendeeCountDisplayTextField.setFocusable(false);
        attendeeCountDisplayTextField.setFont(resourceMap.getFont("attendeeCountDisplayTextField.font")); // NOI18N
        attendeeCountDisplayTextField.setName("attendeeCountDisplayTextField"); // NOI18N
        attendeeCountDisplayTextField.setRequestFocusEnabled(false);

        attendeeCountLabel.setText(resourceMap.getString("attendeeCountLabel.text")); // NOI18N
        attendeeCountLabel.setName("attendeeCountLabel"); // NOI18N

        entrySlotLabel.setText(resourceMap.getString("entrySlotLabel.text")); // NOI18N
        entrySlotLabel.setName("entrySlotLabel"); // NOI18N

        statusLabel.setText(resourceMap.getString("statusLabel.text")); // NOI18N
        statusLabel.setName("statusLabel"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bookingStatusScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 519, Short.MAX_VALUE)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(studentNumberInputLabel)
                        .addGap(18, 18, 18)
                        .addComponent(studentNumberInput, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enterStudentNumberButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                        .addComponent(statusLabel)
                        .addGap(10, 10, 10)
                        .addComponent(statusDisplayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(entrySlotLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(entrySlotDisplayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(attendeeCountLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(attendeeCountDisplayTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentNumberInputLabel)
                    .addComponent(studentNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterStudentNumberButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusDisplayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(attendeeCountDisplayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(entrySlotDisplayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(statusLabel)
                    .addComponent(entrySlotLabel)
                    .addComponent(attendeeCountLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookingStatusScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveButton)
                    .addComponent(backButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(eventswipe.EventSwipeApp.class).getContext().getActionMap(EventSwipeView.class, this);
        saveMenuItem.setAction(actionMap.get("saveAttendeesToFile")); // NOI18N
        saveMenuItem.setText(resourceMap.getString("saveMenuItem.text")); // NOI18N
        saveMenuItem.setName("saveMenuItem"); // NOI18N
        fileMenu.add(saveMenuItem);

        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        configPanel.setMinimumSize(new java.awt.Dimension(720, 350));
        configPanel.setName("configPanel"); // NOI18N
        configPanel.setPreferredSize(new java.awt.Dimension(720, 350));

        eventTitleInputLabel.setText(resourceMap.getString("eventTitleInputLabel.text")); // NOI18N
        eventTitleInputLabel.setName("eventTitleInputLabel"); // NOI18N

        requireBookingButtonGroup.add(yesBookingRadioButton);
        yesBookingRadioButton.setText(resourceMap.getString("yesBookingRadioButton.text")); // NOI18N
        yesBookingRadioButton.setName("yesBookingRadioButton"); // NOI18N
        yesBookingRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesBookingRadioButtonActionPerformed(evt);
            }
        });

        requireBookingButtonGroup.add(noBookingRadioButton);
        noBookingRadioButton.setSelected(true);
        noBookingRadioButton.setText(resourceMap.getString("noBookingRadioButton.text")); // NOI18N
        noBookingRadioButton.setName("noBookingRadioButton"); // NOI18N
        noBookingRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noBookingRadioButtonActionPerformed(evt);
            }
        });

        requireBookingLabel.setText(resourceMap.getString("requireBookingLabel.text")); // NOI18N
        requireBookingLabel.setName("requireBookingLabel"); // NOI18N

        okConfigButton.setText(resourceMap.getString("okConfigButton.text")); // NOI18N
        okConfigButton.setName("okConfigButton"); // NOI18N
        okConfigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okConfigButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(resourceMap.getFont("titleLabel.font")); // NOI18N
        titleLabel.setText(resourceMap.getString("titleLabel.text")); // NOI18N
        titleLabel.setName("titleLabel"); // NOI18N

        bookingDetailsPanel.setEnabled(false);
        bookingDetailsPanel.setName("bookingDetailsPanel"); // NOI18N

        entrySlotBookingListLabel1.setText(resourceMap.getString("entrySlotBookingListLabel1.text")); // NOI18N
        entrySlotBookingListLabel1.setName("entrySlotBookingListLabel1"); // NOI18N

        entrySlotsLabel.setText(resourceMap.getString("entrySlotsLabel.text")); // NOI18N
        entrySlotsLabel.setName("entrySlotsLabel"); // NOI18N

        bookingListBrowseButton1.setText(resourceMap.getString("bookingListBrowseButton1.text")); // NOI18N
        bookingListBrowseButton1.setName("bookingListBrowseButton1"); // NOI18N
        bookingListBrowseButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFileAction(evt);
            }
        });

        entrySlotsSpinner.setName("entrySlotsSpinner"); // NOI18N
        entrySlotsSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                entrySlotsSpinnerStateChanged(evt);
            }
        });

        entrySlotBookingListFilePathInput3.setText(EventSwipeData.fileInputDefault);
        entrySlotBookingListFilePathInput3.setName("entrySlotBookingListFilePathInput3"); // NOI18N
        entrySlotBookingListFilePathInput3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputFocusLost(evt);
            }
        });

        entrySlotBookingListFilePathInput2.setText(EventSwipeData.fileInputDefault);
        entrySlotBookingListFilePathInput2.setName("entrySlotBookingListFilePathInput2"); // NOI18N
        entrySlotBookingListFilePathInput2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputFocusLost(evt);
            }
        });

        entrySlotBookingListLabel3.setText(resourceMap.getString("entrySlotBookingListLabel3.text")); // NOI18N
        entrySlotBookingListLabel3.setName("entrySlotBookingListLabel3"); // NOI18N

        entrySlotBookingListLabel2.setText(resourceMap.getString("entrySlotBookingListLabel2.text")); // NOI18N
        entrySlotBookingListLabel2.setName("entrySlotBookingListLabel2"); // NOI18N

        waitingListFilePathInput.setText(EventSwipeData.fileInputDefault);
        waitingListFilePathInput.setName("waitingListFilePathInput"); // NOI18N
        waitingListFilePathInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputFocusLost(evt);
            }
        });

        waitingListFileLabel.setText(resourceMap.getString("waitingListFileLabel.text")); // NOI18N
        waitingListFileLabel.setName("waitingListFileLabel"); // NOI18N

        bookingListBrowseButton2.setText(resourceMap.getString("bookingListBrowseButton2.text")); // NOI18N
        bookingListBrowseButton2.setName("bookingListBrowseButton2"); // NOI18N
        bookingListBrowseButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFileAction(evt);
            }
        });

        bookingListBrowseButton3.setText(resourceMap.getString("bookingListBrowseButton3.text")); // NOI18N
        bookingListBrowseButton3.setName("bookingListBrowseButton3"); // NOI18N
        bookingListBrowseButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFileAction(evt);
            }
        });

        waitingListBrowseButton.setText(resourceMap.getString("waitingListBrowseButton.text")); // NOI18N
        waitingListBrowseButton.setName("waitingListBrowseButton"); // NOI18N
        waitingListBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFileAction(evt);
            }
        });

        waitingListButtonGroup.add(noWaitingListRadioButton);
        noWaitingListRadioButton.setText(resourceMap.getString("noWaitingListRadioButton.text")); // NOI18N
        noWaitingListRadioButton.setName("noWaitingListRadioButton"); // NOI18N
        noWaitingListRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noWaitingListRadioButtonActionPerformed(evt);
            }
        });

        waitingListLabel.setText(resourceMap.getString("waitingListLabel.text")); // NOI18N
        waitingListLabel.setName("waitingListLabel"); // NOI18N

        entrySlotBookingListFilePathInput1.setText(EventSwipeData.fileInputDefault);
        entrySlotBookingListFilePathInput1.setName("entrySlotBookingListFilePathInput1"); // NOI18N
        entrySlotBookingListFilePathInput1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputFocusLost(evt);
            }
        });

        waitingListButtonGroup.add(yesWaitingListRadioButton);
        yesWaitingListRadioButton.setText(resourceMap.getString("yesWaitingListRadioButton.text")); // NOI18N
        yesWaitingListRadioButton.setName("yesWaitingListRadioButton"); // NOI18N
        yesWaitingListRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesWaitingListRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bookingDetailsPanelLayout = new javax.swing.GroupLayout(bookingDetailsPanel);
        bookingDetailsPanel.setLayout(bookingDetailsPanelLayout);
        bookingDetailsPanelLayout.setHorizontalGroup(
            bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookingDetailsPanelLayout.createSequentialGroup()
                .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                        .addComponent(waitingListLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(yesWaitingListRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noWaitingListRadioButton)
                        .addGap(160, 160, 160)
                        .addComponent(waitingListFileLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(waitingListFilePathInput, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(waitingListBrowseButton))
                    .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                        .addComponent(entrySlotBookingListLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(entrySlotBookingListFilePathInput3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bookingListBrowseButton3))
                    .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                        .addComponent(entrySlotBookingListLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(entrySlotBookingListFilePathInput2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bookingListBrowseButton2))
                    .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                        .addComponent(entrySlotsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(entrySlotsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(entrySlotBookingListLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(entrySlotBookingListFilePathInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bookingListBrowseButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bookingDetailsPanelLayout.setVerticalGroup(
            bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entrySlotBookingListFilePathInput1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entrySlotBookingListLabel1)
                    .addComponent(bookingListBrowseButton1)
                    .addComponent(entrySlotsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entrySlotsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entrySlotBookingListFilePathInput2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entrySlotBookingListLabel2)
                    .addComponent(bookingListBrowseButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entrySlotBookingListFilePathInput3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entrySlotBookingListLabel3)
                    .addComponent(bookingListBrowseButton3))
                .addGap(26, 26, 26)
                .addGroup(bookingDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(waitingListBrowseButton)
                    .addComponent(waitingListFilePathInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(waitingListFileLabel)
                    .addComponent(waitingListLabel)
                    .addComponent(yesWaitingListRadioButton)
                    .addComponent(noWaitingListRadioButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        eventTitleInput.setText(EventSwipeData.titleInputDefault);
        eventTitleInput.setName("eventTitleInput"); // NOI18N
        eventTitleInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputFocusLost(evt);
            }
        });
        eventTitleInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                eventTitleInputKeyPressed(evt);
            }
        });

        clearButton.setText(resourceMap.getString("clearButton.text")); // NOI18N
        clearButton.setName("clearButton"); // NOI18N
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout configPanelLayout = new javax.swing.GroupLayout(configPanel);
        configPanel.setLayout(configPanelLayout);
        configPanelLayout.setHorizontalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(configPanelLayout.createSequentialGroup()
                        .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(configPanelLayout.createSequentialGroup()
                                .addComponent(requireBookingLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(yesBookingRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(noBookingRadioButton))
                            .addGroup(configPanelLayout.createSequentialGroup()
                                .addComponent(eventTitleInputLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(eventTitleInput, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
                            .addComponent(titleLabel)
                            .addComponent(bookingDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configPanelLayout.createSequentialGroup()
                        .addComponent(okConfigButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 504, Short.MAX_VALUE)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        configPanelLayout.setVerticalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(titleLabel)
                .addGap(18, 18, 18)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventTitleInputLabel)
                    .addComponent(eventTitleInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requireBookingLabel)
                    .addComponent(yesBookingRadioButton)
                    .addComponent(noBookingRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookingDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(clearButton)
                    .addComponent(okConfigButton))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        setComponent(configPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    @Action
    private void okConfigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okConfigButtonActionPerformed
        EventSwipeApp.getApplication().setBookingFlag(yesBookingRadioButton.isSelected());
        EventSwipeApp.getApplication().setWaitingListFlag(yesWaitingListRadioButton.isSelected());
        EventSwipeApp.getApplication().setSlots((Integer)entrySlotsSpinner.getValue());
        boolean configOK = EventSwipeApp.getApplication().setEventTitle(eventTitleInput.getText());
        if (configOK && EventSwipeApp.getApplication().getBookingFlag() && EventSwipeApp.getApplication().getSlots() > 0)
            configOK = EventSwipeApp.getApplication().setFile(FileFunction.BOOKING_1, new File(entrySlotBookingListFilePathInput1.getText()));
        if (configOK && EventSwipeApp.getApplication().getBookingFlag() && EventSwipeApp.getApplication().getSlots() > 1)
            configOK = EventSwipeApp.getApplication().setFile(FileFunction.BOOKING_2, new File(entrySlotBookingListFilePathInput2.getText()));
        if (configOK && EventSwipeApp.getApplication().getBookingFlag() && EventSwipeApp.getApplication().getSlots() > 2)
            configOK = EventSwipeApp.getApplication().setFile(FileFunction.BOOKING_3, new File(entrySlotBookingListFilePathInput3.getText()));
        if (configOK && EventSwipeApp.getApplication().getBookingFlag() && EventSwipeApp.getApplication().getWaitingListFlag())
            configOK = EventSwipeApp.getApplication().setFile(FileFunction.WAITING_LIST, new File(waitingListFilePathInput.getText()));
        if (configOK) {
            switchToPanel(mainPanel);
        }
    }//GEN-LAST:event_okConfigButtonActionPerformed

    @Action
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        switchToPanel(configPanel);
    }//GEN-LAST:event_backButtonActionPerformed

    @Action
    private void yesBookingRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesBookingRadioButtonActionPerformed
        updateBookingPanel(yesBookingRadioButton.isSelected());
    }//GEN-LAST:event_yesBookingRadioButtonActionPerformed

    @Action
    private void noBookingRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noBookingRadioButtonActionPerformed
        updateBookingPanel(yesBookingRadioButton.isSelected());
    }//GEN-LAST:event_noBookingRadioButtonActionPerformed

    @Action
    private void yesWaitingListRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesWaitingListRadioButtonActionPerformed
        updateBookingPanel(true);
    }//GEN-LAST:event_yesWaitingListRadioButtonActionPerformed

    @Action
    private void noWaitingListRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noWaitingListRadioButtonActionPerformed
        updateBookingPanel(true);
    }//GEN-LAST:event_noWaitingListRadioButtonActionPerformed

    @Action
    private void entrySlotsSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_entrySlotsSpinnerStateChanged
        updateBookingPanel(true);
    }//GEN-LAST:event_entrySlotsSpinnerStateChanged

    @Action
    private void inputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputFocusGained
        JFormattedTextField input = (JFormattedTextField) evt.getSource();
        if (input == eventTitleInput && input.getText().equals(EventSwipeData.titleInputDefault))
            input.setText("");
        else if (input.getText().equals(EventSwipeData.fileInputDefault))
            input.setText("");
    }//GEN-LAST:event_inputFocusGained

    @Action
    private void inputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputFocusLost
        JFormattedTextField input = (JFormattedTextField) evt.getSource();
        if (input == eventTitleInput && input.getText().equals(""))
            input.setText(EventSwipeData.titleInputDefault);
        else if (input.getText().equals(""))
            input.setText(EventSwipeData.fileInputDefault);
    }//GEN-LAST:event_inputFocusLost

    @Action
    private void browseFileAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseFileAction
        JFileChooser fc = new JFileChooser();
        File file = null;
        fc.addChoosableFileFilter(new TextCSVFilter());
        int returnVal = fc.showDialog(EventSwipeApp.getApplication().getMainFrame(), "Choose");
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fc.getSelectedFile();
            if (evt.getSource() == bookingListBrowseButton1) {
                entrySlotBookingListFilePathInput1.setText(file.getPath());
            }
            if (evt.getSource() == bookingListBrowseButton2) {
                entrySlotBookingListFilePathInput2.setText(file.getPath());
            }
            if (evt.getSource() == bookingListBrowseButton3) {
                entrySlotBookingListFilePathInput3.setText(file.getPath());
            }
            if (evt.getSource() == waitingListBrowseButton) {
                waitingListFilePathInput.setText(file.getPath());
            }
        }
    }//GEN-LAST:event_browseFileAction

    @Action
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        eventTitleInput.setText(EventSwipeData.titleInputDefault);
        entrySlotBookingListFilePathInput1.setText(EventSwipeData.fileInputDefault);
        entrySlotBookingListFilePathInput2.setText(EventSwipeData.fileInputDefault);
        entrySlotBookingListFilePathInput3.setText(EventSwipeData.fileInputDefault);
        waitingListFilePathInput.setText(EventSwipeData.fileInputDefault);
        entrySlotsSpinner.setValue(1);
        noWaitingListRadioButton.setSelected(true);
        noBookingRadioButton.setSelected(true);
        updateBookingPanel(false);
        eventTitleInput.requestFocusInWindow();

    }//GEN-LAST:event_clearButtonActionPerformed

    @Action
    private void enterStudentNumberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterStudentNumberButtonActionPerformed
        checkBooking();
    }//GEN-LAST:event_enterStudentNumberButtonActionPerformed
    
    @Action
    private void studentNumberInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studentNumberInputKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            checkBooking();
        }
    }//GEN-LAST:event_studentNumberInputKeyPressed

    @Action
    private void eventTitleInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eventTitleInputKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            okConfigButtonActionPerformed(new ActionEvent(evt.getSource(), 0, null));
        }
    }//GEN-LAST:event_eventTitleInputKeyPressed

    @Action
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        EventSwipeApp.getApplication().saveAttendeesToFile();
    }//GEN-LAST:event_saveButtonActionPerformed
    
    private void checkBooking() {
        String stuNumber = studentNumberInput.getText();
        if (stuNumber.isEmpty()) {
            JOptionPane.showMessageDialog(EventSwipeApp.getApplication().getMainFrame(),
                                          "Please enter a student number!",
                                          "No student number",
                                          JOptionPane.ERROR_MESSAGE);
        }
        else {
            updateBookingStatus(EventSwipeApp.getApplication().checkBooking(stuNumber));
        }
    }

    private void updateBookingStatus(Booking booking) {
        String stuNumber = booking.getStuNumber();
        String message = "Student " + stuNumber;
        String slot = booking.getEntrySlot() == 0 ? "N/A" : booking.getEntrySlot().toString();
        slot = booking.isOnWaitingList() ? "W/L" : slot;
        String bookingStatus = "";
        if (booking.isAlreadyRecorded()) {
            message += " has already been recorded";
            bookingStatus = "Already recorded";
        }
        else if(booking.isOnWaitingList()) {
            int reply = JOptionPane.showConfirmDialog(EventSwipeApp.getApplication().getMainFrame(),
                                                      "Student is on the waiting list. "
                                                      + "Allow student to enter?",
                                                      "Student on waiting list",
                                                      JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                EventSwipeApp.getApplication().recordAttendance(stuNumber, 0);
                bookingStatus = "Recorded";
                message += " has been recorded";
            }
            else {
                bookingStatus = "Waiting list";
                message += " is on the waiting list";
            }
        }
        else if (booking.isBooked()) {
            if (EventSwipeApp.getApplication().getBookingFlag()) {
                bookingStatus = "Booked";
                message += " has booked";
                if (EventSwipeApp.getApplication().getSlots() > 1) {
                    message += " for entry slot " + slot;
                }
            }
            else {
                bookingStatus = "Recorded";
                message += " has been recorded";
            }
        }
        else {
            message += " has NOT booked onto this event";
            bookingStatus = "Not booked";
        }
        displayBookingStatus(bookingStatus, slot);
        displayBookingMessage(message);
    }

    private void displayBookingMessage(String message) {
        message += "\n";
        bookingStatusTextArea.append(message);
        studentNumberInput.setText("");
        studentNumberInput.requestFocusInWindow();
    }

    private void displayBookingStatus(String statusMessage, String slot) {
        statusDisplayTextField.setText(statusMessage);
        entrySlotDisplayTextField.setText(slot);
        Color color;
        boolean enabled;
        if(statusMessage.equals("Booked")) {
            color = Color.GREEN;
            enabled = true;
            attendeeCountDisplayTextField.setText(EventSwipeApp.getApplication().getAttendeeCount());
        }
        else if(statusMessage.equals("Recorded")) {
            color = Color.WHITE;
            enabled = false;
            attendeeCountDisplayTextField.setText(EventSwipeApp.getApplication().getAttendeeCount());
        }
        else {
            enabled = false;
            color = statusMessage.equals("Not booked") ? Color.RED : Color.ORANGE;
        }
        statusDisplayTextField.setBackground(color);
        entrySlotLabel.setEnabled(enabled);
        entrySlotDisplayTextField.setEnabled(enabled);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField attendeeCountDisplayTextField;
    private javax.swing.JLabel attendeeCountLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JPanel bookingDetailsPanel;
    private javax.swing.JButton bookingListBrowseButton1;
    private javax.swing.JButton bookingListBrowseButton2;
    private javax.swing.JButton bookingListBrowseButton3;
    private javax.swing.JScrollPane bookingStatusScrollPane;
    private javax.swing.JTextArea bookingStatusTextArea;
    private javax.swing.JButton clearButton;
    private javax.swing.JPanel configPanel;
    private javax.swing.JButton enterStudentNumberButton;
    private javax.swing.JFormattedTextField entrySlotBookingListFilePathInput1;
    private javax.swing.JFormattedTextField entrySlotBookingListFilePathInput2;
    private javax.swing.JFormattedTextField entrySlotBookingListFilePathInput3;
    private javax.swing.JLabel entrySlotBookingListLabel1;
    private javax.swing.JLabel entrySlotBookingListLabel2;
    private javax.swing.JLabel entrySlotBookingListLabel3;
    private javax.swing.JFormattedTextField entrySlotDisplayTextField;
    private javax.swing.JLabel entrySlotLabel;
    private javax.swing.JLabel entrySlotsLabel;
    private javax.swing.JSpinner entrySlotsSpinner;
    private javax.swing.JFormattedTextField eventTitleInput;
    private javax.swing.JLabel eventTitleInputLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JRadioButton noBookingRadioButton;
    private javax.swing.JRadioButton noWaitingListRadioButton;
    private javax.swing.JButton okConfigButton;
    private javax.swing.ButtonGroup requireBookingButtonGroup;
    private javax.swing.JLabel requireBookingLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JFormattedTextField statusDisplayTextField;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JFormattedTextField studentNumberInput;
    private javax.swing.JLabel studentNumberInputLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton waitingListBrowseButton;
    private javax.swing.ButtonGroup waitingListButtonGroup;
    private javax.swing.JLabel waitingListFileLabel;
    private javax.swing.JFormattedTextField waitingListFilePathInput;
    private javax.swing.JLabel waitingListLabel;
    private javax.swing.JRadioButton yesBookingRadioButton;
    private javax.swing.JRadioButton yesWaitingListRadioButton;
    // End of variables declaration//GEN-END:variables
    private JDialog aboutBox;

    private void switchToPanel(JPanel panel) {
        JFrame mainFrame = EventSwipeApp.getApplication().getMainFrame();
        mainFrame.setContentPane(panel);
        if (panel == mainPanel)
            studentNumberInput.requestFocusInWindow();
        panel.revalidate();
        mainFrame.repaint();
    }

    private void updateBookingPanel(boolean enabled) {
        Integer slots = (Integer)entrySlotsSpinner.getValue();
        bookingDetailsPanel.setEnabled(enabled);
        bookingListBrowseButton1.setEnabled(enabled);
        bookingListBrowseButton2.setEnabled(enabled && slots > 1);
        bookingListBrowseButton3.setEnabled(enabled && slots > 2);
        waitingListBrowseButton.setEnabled(enabled && yesWaitingListRadioButton.isSelected());
        entrySlotBookingListFilePathInput1.setEnabled(enabled);
        entrySlotBookingListFilePathInput2.setEnabled(enabled && slots > 1);
        entrySlotBookingListFilePathInput3.setEnabled(enabled && slots > 2);
        waitingListFilePathInput.setEnabled(enabled && yesWaitingListRadioButton.isSelected());
        entrySlotBookingListLabel1.setEnabled(enabled);
        entrySlotBookingListLabel2.setEnabled(enabled && slots > 1);
        entrySlotBookingListLabel3.setEnabled(enabled && slots > 2);
        waitingListFileLabel.setEnabled(enabled && yesWaitingListRadioButton.isSelected());
        entrySlotsLabel.setEnabled(enabled);
        entrySlotsSpinner.setEnabled(enabled);
        noWaitingListRadioButton.setEnabled(enabled);
        yesWaitingListRadioButton.setEnabled(enabled);
        waitingListLabel.setEnabled(enabled);
        entrySlotLabel.setEnabled(enabled);
        entrySlotDisplayTextField.setText(enabled ? "": "N/A");
        entrySlotDisplayTextField.setEnabled(enabled);
    }

}
